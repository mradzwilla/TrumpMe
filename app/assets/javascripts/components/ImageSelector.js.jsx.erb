var ImageSelector = React.createClass({

	getInitialState: function(){
		return{
			imgState:  "<%= image_path('Trump1.jpg') %>",
			templateRef: 1
		}
	},

	_draw: function(context, text){
		var draw = function(){
			context.drawImage(objectImg, 100, 100);
		}

		var wrapText =  function(context, text) {
		    var words = text.split(' ');
		    var line = '';
		    var x = 0
		    var y = 68
		    var maxWidth = 760
		    var lineHeight = 40

		    for(var n = 0; n < words.length; n++) {
		      var testLine = line + words[n] + ' ';
		      var metrics = context.measureText(testLine);
		      var testWidth = metrics.width;
		      if (testWidth > maxWidth && n > 0) {
		        context.fillText(line, x, y);
		        line = words[n] + ' ';
		        y += lineHeight;
		      }
		      else {
		        line = testLine;
		      }
		    }
		    context.fillText(line, x, y);
			}	

		var objectImg = new Image();
		var imgPath = this.state.imgState;
		objectImg.src = imgPath
		console.log('drawing ' + imgPath)

		objectImg.onload = function(){
			draw();
			wrapText(context, text)
		}
	},

	componentDidUpdate: function(){

	// var can = this.refs.canvas;
	// var context = can.getContext('2d');
	// var text = this.props.textInput

	// this._draw(context, text);
	// this.wrapText(context, text)

	},
	componentDidMount: function(){

	// var can = this.refs.canvas;
	// var context = can.getContext('2d');
	console.log(this.state.templateRef)
	// this._draw(context);	
	// logStuff();
	},

	_changePicState: function(imageLink, id){
		this.setState({imgState: imageLink, templateRef: id})
	},

	_getThumbnails: function(){
		const thumbnailList = [
		{id: 1, imageLink: "<%= image_path('Trump1.jpg') %>"},
		{id: 2, imageLink: "<%= image_path('Trump3.jpg') %>"},
		{id: 3, imageLink: "<%= image_path('Trump7.jpg') %>"},
		]

		return thumbnailList.map((e) => {
			return (
				<ImageThumbnail key={e.id} imageLink={e.imageLink} onClick={this._changePicState} id={e.id}/>
				)
		});
	},

	render: function() {
	const thumbnails = this._getThumbnails()

	if (this.state.templateRef == 1){
		return (
			<div>
			{thumbnails}
			<QuoteTemplate1 textInput={this.props.textInput} />
			</div>
			)
	} else if (this.state.templateRef == 2){
		return (
			<div>
			{thumbnails}
			<QuoteTemplate2 textInput={this.props.textInput} />
			</div>
		)
	} else if (this.state.templateRef == 3) {
		return (
			<div>
			{thumbnails}
			<QuoteTemplate3 textInput={this.props.textInput} />
			</div>
		)	}
}

});

var ImageThumbnail = React.createClass({

	_runPropFunc: function(){
		this.props.onClick(this.props.imageLink, this.props.id)
	},

	render: function(){
		return (
			<img key={this.props.id} src={this.props.imageLink} className="thumbnail" onClick={this._runPropFunc} />
			)
	}
})